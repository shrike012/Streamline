services:
  backend:
    container_name: backend
    build: ./backend
    ports:
      - "8080:8080"
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      FLASK_DEBUG: 1
      FLASK_APP: app.py
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      PYTHONUNBUFFERED: 1
      REDIS_URI: redis://redis:6379
    volumes:
      - ./backend:/app
      - ./logs:/logs
    command: flask run --host=0.0.0.0 --port=8080 --debug

  frontend:
    platform: linux/amd64
    build:
      context: ./frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules

  mongo:
    image: mongo:6.0
    container_name: streamline-mongo
    command: ["mongod", "--quiet", "--logpath", "/dev/null", "--logappend"]
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: streamline-redis
    ports:
      - "6379:6379"
    restart: unless-stopped

volumes:
  mongo_data: